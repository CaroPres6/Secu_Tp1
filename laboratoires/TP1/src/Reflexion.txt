Pt 1.5. - Réflexion
    1. Ce chiffrement est exponentionnellement plus difficile qu'un simple césar.
        En effet, césar a seulement 26 possibilités de shifts ce qui est relativement simple a déchiffrer. 
        Tandis que cette méthode utilise ces 26 shifts avec une permutation.
        À cause de la permutation, même s'il existait des ordinateurs assez puissants,
        ça prendrait beaucoup trop de temps pour déchiffrer les mots de passes.

    2. L'analyse de fréquence pourrait permettre de découvrir certaies lettres,
        car les lettres vont toujours avoir la même lettre de correspondance dans le dictionnaire. 
        Donc, par exemple, si on prend la lettre 'e' sa fréquence est élevée tant en français qu'en anglais. 
        Alors, c'est assez simple de reconnaître si le 'e' équivaut au 'k' dans le dictionnaire.
    
    3. Nous n'avons pas besoin de faire des listes contenant chaque clé : valeur, ce qui facilite grandement l'implémentation.
        En effet, ça permet de ne pas compliquer les choses avec des index.


Pt 2.5. 
    1. Les mots de passes hachés avec sel résistent mieux aux attaques par rainbow table,
        car le sel est une valeur aléatoire de 16 bytes stockés sous forme hexadécimale. 
        C'est unique pour chaque utilisateur. Donc, même s'il y a 2 utilisateurs qui ont le même mot de passe,
        leur hashage va être différent à cause du sel. La rainbow table a déjà des hash prédéterminés 
        dans une base de données, mais le sel est imprévisible, alors l'attaque devrait être recalculée complètement.

    2. La force brute sur des mots de passe hachés est inefficace,car chaque tentative demande un calcul de hachage (SHA-256), 
        ce qui prend beaucoup de temps de traitement. De plus, le champ de recherche est immense. 
        Par exemple, un mot de passe de 8 caractères peut engendrer des milliards de combinaisons possibles, rendant quasi impossible une tentative d'intrusion.

    3. Cet exercice montre que le sel est d'une importance primordiale. En effet, grâce au fait qu'il est si aléatoire et imprévisble,
        ça permet de rendre beaucoup plus difficile les tentatives de piratages par les attaquants. Les fonctions de hachage sécurisées sont également 
        importantes dans les systèmes de login, car elles sont irréversibles. Donc, elles renforcent encore plus la sécurité des mots de passes.